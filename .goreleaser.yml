# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
project_name: ksops
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    binary: "{{ .ProjectName }}"

archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64

    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

release:
  github:
    owner: viaduct-ai
    name: kustomize-sops

dockers:
  # Templates of the Docker image names.
  - image_templates:
      - "viaductoss/{{ .ProjectName }}:latest"
      - "viaductoss/{{ .ProjectName }}:{{ .Tag }}"
      - "viaductoss/{{ .ProjectName }}:v{{ .Major }}"

    # Template of the docker build flags.
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

    # If your Dockerfile copies files other than the binary itself,
    # you should list them here as well.
    # Note that goreleaser will create the same structure inside the temporary
    # folder, so if you add `foo/bar.json` here, on your Dockerfile you can
    # `COPY foo/bar.json /whatever.json`.
    # Also note that the paths here are relative to the folder in which
    # goreleaser is being run.
    # This field does not support wildcards, you can add an entire folder here
    # and use wildcards when you `COPY`/`ADD` in your Dockerfile.
    extra_files:
      - go.mod
      - go.sum
      - Makefile
      - scripts/
      - exec_plugin.go
      - ksops.go
      # include .git for version
      - .git/

brews:
  - tap:
      owner: viaduct-ai
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_GITHUB_TOKEN }}"

    commit_author:
      name: viaduct-bot
      email: engineering@viaduct.ai

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    homepage: "https://github.com/viaduct-ai/kustomize-sops"

    description: "A flexible kustomize plugin for SOPS encrypted resources"

    caveats: |
      By default, ksops is installed under:
        $HOME/.config/kustomize/plugin/viaduct.ai/v1

      You will want to verify that $XDG_CONFIG_HOME=$HOME/.config

      echo "Add 'export XDG_CONFIG_HOME=\$HOME/.config' to your .bashrc, zshrc, etc"


    custom_block: |
      license "Apache-2.0"
      head "https://github.com/viaduct-ai/kustomize-sops.git"

    # Packages your package depends on.
    dependencies:
      - name: go
        type: build
      - name: kustomize

    install: |
      plugin_path =  "$HOME/.config/kustomize/plugin/viaduct-ai/ksops"
      mkdir_p plugin_path
      system "go", "build", "-o", "#{plugin_path}/ksops"

    test: |
      (testpath/"kustomization.yaml").write <<~EOS
        generators:
        - generate-secrets.yaml
      EOS

      (testpath/"generate-secrets.yaml").write <<~EOS
        apiVersion: viaduct.ai/v1
        kind: ksops
        metadata:
          name: ksops-brew-test
        files:
          - ./secret.enc.yaml
      EOS
      (testpath/"secret.enc.yaml").write <<~EOS
        apiVersion: v1
        data:
            password: ENC[AES256_GCM,data:zNQ8ggdb+JJy7iuPSAN/kQ==,iv:Q5uRK0kc6v+/JQmXTis+nI5+oOGZDYTenBxNHJl1j0k=,tag:vafRVZrmOIDq9BieSt63vQ==,type:str]
            username: ENC[AES256_GCM,data:Cg2EK7Ses6s=,iv:lfg16oYV8fqat3nyXnymgLe6lYxsqP6ETVAfKu4pw2g=,tag:XXGNUV40E5DkmBBvkFjHSw==,type:str]
        kind: Secret
        metadata:
            name: mysecret
        stringData:
            application: ENC[AES256_GCM,data:MaFc0qvfG9NTKzc++TU=,iv:1EwuPqZUhgwruRxDAFILJPsze/TSKHV0b6Eb7/PGzpw=,tag:UBLc3/NzIsLK0bOg/REhfg==,type:str]
        type: Opaque
        sops:
            kms: []
            gcp_kms: []
            azure_kv: []
            hc_vault: []
            lastmodified: '2020-11-14T18:37:05Z'
            mac: ENC[AES256_GCM,data:eINwDQqEIqYGgVXx5bdN+AhNsc9KYfoPjDgM3tfwaQv3GPzoSXbWF34RDVPfZhdv3Oq7ZDXB2Bfz5m5trbZYkYhYYsHoBrOtNIN1YLtxFvzS8+1SYEQuqu1mFKM9Mmxs8/A39F4uoG2QA9+zSiig9lvplJ1qTW39p+9WvmFVpSo=,iv:V4gOsx9UDR0LE10DE+0EXAJvmX4Xvgvvm6LXCIRyMaU=,tag:m0q+n9xVNLUwWzP4gnUdvA==,type:str]
            pgp:
            -   created_at: '2020-11-14T18:37:04Z'
                enc: |
                    -----BEGIN PGP MESSAGE-----

                    hQEMAyUpShfNkFB/AQf+L+gVQqmv7e3P8wsspVmgJczb/2KlXf3s96AD+7YFkJ2v
                    M36cgn//mVP70EpYi6A8SedftD1h6Z4OBnD51tjua8FZbzFHJ1BvZhZbyowk0m0x
                    G81tRTiRKAmZ1Np3MHB9Zm4C0jBSL52MyOappb66sh8UTEIR2otCGAsAH+ltZqtX
                    KUbE2R0GKJn4u8zOWZOB+gOAJkRS7r7ESw9DDNKpgtM3G5872JqZhrxsr5xX+afQ
                    228gTzOQnqP4ZR9o4MKBF7r+CfgynRXJgGDoc+6g+B/kemd9qNlwZx8DmaoEfCP5
                    e5VPndaR5kAhQXCr898IKXaY8bj1EL89ackWoGloBtJeAaQe9HFwavGWzvke9wJi
                    bHhV50oZoAqcXSlhy6AjEW/3bJryzcoMdj68dTVAC4QSRuOJHLZzKQj+nb8t+LUd
                    UCr3eXZ3rHkCgBT6dAF2IIK+p7euqLlwXhw6NMYvNw==
                    =f0g+
                    -----END PGP MESSAGE-----
                fp: FBC7B9E2A4F9289AC0C1D4843D16CEE4A27381B4
            encrypted_regex: ^(data|stringData)$
            version: 3.6.1
      EOS

      # Assert the plugin loads and throws an error for the missing key
      output = shell_output("#{bin}/kustomize build --enable_alpha_plugins #{testpath}")
      assert_match /kind:\s+"?Secret"?/, output
